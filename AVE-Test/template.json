{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "_generator": {
            "name": "bicep",
            "version": "0.29.47.4906",
            "templateHash": "9104979963416580560"
        }
    },
    "parameters": {
        "communityName": {
            "type": "string"
        },
        "enclaveName": {
            "type": "string"
        },
        "endpointName": {
            "type": "string"
        },
        "addressSpace": {
            "type": "string",
            "defaultValue": "10.0.0.0/8"
        },
        "dnsServers": {
            "type": "array",
            "defaultValue": []
        },
        "networkSize": {
            "type": "string",
            "defaultValue": "small"
        },
        "customCidrRange": {
            "type": "string",
            "defaultValue": ""
        },
        "numberOfEnclaves": {
            "type": "int",
            "defaultValue": 2
        },
        "stage": {
            "type": "int",
            "defaultValue": 6,
            "metadata": {
                "description": "determines what stage to deploy"
            }
        },
        "transitOptionType": {
            "type": "string",
            "defaultValue": "Gateway"
        },
        "scaleUnits": {
            "type": "int",
            "defaultValue": 2
        },
        "transitHubName": {
            "type": "string",
            "defaultValue": "transit-hub-1"
        },
        "remoteVirtualNetworkId": {
            "type": "string",
            "defaultValue": ""
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "connectionNameBase": {
            "type": "string",
            "defaultValue": "[take(format('a{0}', uniqueString(resourceGroup().id, deployment().name)), 10)]"
        },
        "enableTelemetry": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable/Disable usage telemetry for this template."
            }
        }
    },
    "variables": {
        "workloadProperties": {
            "managedResourceGroupConfiguration": {
                "name": "[format('{0}-wl', parameters('communityName'))]",
                "location": "[parameters('location')]"
            }
        }
    },
    "resources": [
        {
            "condition": "[parameters('enableTelemetry')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2024-03-01",
            "name": "[take(format('virtualenclaves.ave-nightly.{0}.{1}', replace('-..--..-', '.', '-'), substring(uniqueString(deployment().name, parameters('location')), 0, 4)), 64)]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [],
                    "outputs": {
                        "telemetry": {
                            "type": "String",
                            "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
                        }
                    }
                }
            }
        },
        {
            "condition": "[greaterOrEquals(parameters('stage'), 1)]",
            "type": "Microsoft.Mission/communities",
            "apiVersion": "2024-01-01-preview",
            "name": "[parameters('communityName')]",
            "location": "[parameters('location')]",
            "tags": {
                "department": "MyDepartment",
                "company": "MyCompany"
            },
            "properties": {
                "addressSpace": "[parameters('addressSpace')]",
                "dnsServers": "[parameters('dnsServers')]"
            }
        },
        {
            "condition": "[greaterOrEquals(parameters('stage'), 6)]",
            "type": "Microsoft.Mission/communities/transitHubs",
            "apiVersion": "2024-01-01-preview",
            "name": "[format('{0}/{1}', parameters('communityName'), parameters('transitHubName'))]",
            "location": "[parameters('location')]",
            "tags": {
                "department": "MyDepartment",
                "company": "MyCompany"
            },
            "properties": {
                "transitOption": {
                    "type": "[parameters('transitOptionType')]",
                    "params": "[if(or(equals(parameters('transitOptionType'), 'Gateway'), equals(parameters('transitOptionType'), 'ExpressRoute')), json(format('{{ \"scaleUnits\": {0} }}', parameters('scaleUnits'))), json(format('{{ \"remoteVirtualNetworkId\": \"{0}\" }}', parameters('remoteVirtualNetworkId'))))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Mission/communities', parameters('communityName'))]"
            ]
        },
        {
            "condition": "[greaterOrEquals(parameters('stage'), 6)]",
            "type": "Microsoft.Mission/communities/communityEndpoints",
            "apiVersion": "2024-01-01-preview",
            "name": "[format('{0}/{1}', parameters('communityName'), 'example')]",
            "location": "[parameters('location')]",
            "tags": {
                "department": "MyDepartment",
                "company": "MyCompany"
            },
            "properties": {
                "ruleCollection": [
                    {
                        "name": "example-dataplane",
                        "destinationType": "PrivateNetwork",
                        "destination": "172.16.0.0/20",
                        "protocols": [
                            "TCP",
                            "UDP"
                        ],
                        "port": "443,80,3389,53",
                        "transitHubResourceId": "[resourceId('Microsoft.Mission/communities/transitHubs', parameters('communityName'), parameters('transitHubName'))]"
                    },
                    {
                        "name": "example-vpaw",
                        "destinationType": "PrivateNetwork",
                        "destination": "172.16.40.0/23",
                        "protocols": [
                            "TCP",
                            "UDP"
                        ],
                        "port": "443,80,3389",
                        "transitHubResourceId": "[resourceId('Microsoft.Mission/communities/transitHubs', parameters('communityName'), parameters('transitHubName'))]"
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Mission/communities', parameters('communityName'))]",
                "[resourceId('Microsoft.Mission/communities/transitHubs', parameters('communityName'), parameters('transitHubName'))]",
                "enclaveName_1"
            ]
        },
        {
            "condition": "[greaterOrEquals(parameters('stage'), 1)]",
            "type": "Microsoft.Mission/communities/communityEndpoints",
            "apiVersion": "2024-01-01-preview",
            "name": "[format('{0}/bing-outlook', parameters('communityName'))]",
            "location": "[parameters('location')]",
            "tags": {
                "department": "MyDepartment",
                "company": "MyCompany"
            },
            "properties": {
                "ruleCollection": [
                    {
                        "name": "bing",
                        "destinationType": "FQDN",
                        "destination": "bing.com, *.bing.com",
                        "protocols": [
                            "HTTPS"
                        ],
                        "port": "443"
                    },
                    {
                        "name": "outlook",
                        "destinationType": "FQDN",
                        "destination": "outlook.com, *.outlook.com, *outlook.live.com",
                        "protocols": [
                            "HTTPS"
                        ],
                        "port": "443"
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Mission/communities', parameters('communityName'))]"
            ]
        },
        {
            "copy": {
                "name": "enclaveName_1",
                "count": "[length(range(0, parameters('numberOfEnclaves')))]"
            },
            "condition": "[greaterOrEquals(parameters('stage'), 2)]",
            "type": "Microsoft.Mission/virtualenclaves",
            "apiVersion": "2024-01-01-preview",
            "name": "[format('{0}-{1}', parameters('enclaveName'), add(range(0, parameters('numberOfEnclaves'))[copyIndex()], 1))]",
            "location": "[parameters('location')]",
            "tags": {
                "department": "MyDepartment",
                "company": "MyCompany"
            },
            "properties": {
                "communityResourceId": "[resourceId('Microsoft.Mission/communities', parameters('communityName'))]",
                "enclaveVirtualNetwork": {
                    "networkSize": "[parameters('networkSize')]",
                    "customCidrRange": "[parameters('customCidrRange')]",
                    "connectToAzureServices": true
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Mission/communities', parameters('communityName'))]"
            ]
        },
        {
            "condition": "[greaterOrEquals(parameters('stage'), 3)]",
            "type": "Microsoft.Mission/virtualEnclaves/workloads",
            "apiVersion": "2024-01-01-preview",
            "name": "[format('{0}-1/{1}-wl', parameters('enclaveName'), parameters('communityName'))]",
            "properties": "[variables('workloadProperties')]",
            "location": "[parameters('location')]",
            "tags": {
                "department": "MyDepartment",
                "company": "MyCompany"
            },
            "dependsOn": [
                "enclaveName_1"
            ]
        },
        {
            "condition": "[greaterOrEquals(parameters('stage'), 4)]",
            "type": "Microsoft.Mission/virtualEnclaves/enclaveEndpoints",
            "apiVersion": "2024-01-01-preview",
            "name": "[format('{0}-1/{1}-1-v2', parameters('enclaveName'), parameters('endpointName'))]",
            "location": "[parameters('location')]",
            "tags": {
                "department": "MyDepartment",
                "company": "MyCompany"
            },
            "properties": {
                "ruleCollection": [
                    {
                        "name": "ADDS-TCP",
                        "destination": "[if(greaterOrEquals(parameters('stage'), 4), cidrSubnet(reference(resourceId('Microsoft.Mission/virtualenclaves', format('{0}-1', parameters('enclaveName')))).enclaveAddressSpaces.enclaveAddressSpace, 29, 0), null())]",
                        "port": "53,88,135,138,139,389,445,464,636,686,3268-3269,5722,9389,49152-65535",
                        "protocols": [
                            "TCP"
                        ]
                    },
                    {
                        "name": "ADDS-UDP",
                        "destination": "[if(greaterOrEquals(parameters('stage'), 4), cidrSubnet(reference(resourceId('Microsoft.Mission/virtualenclaves', format('{0}-1', parameters('enclaveName')))).enclaveAddressSpaces.enclaveAddressSpace, 29, 0), null())]",
                        "port": "53,389",
                        "protocols": [
                            "UDP"
                        ]
                    }
                ]
            },
            "dependsOn": [
                "enclaveName_1"
            ]
        },
        {
            "condition": "[greaterOrEquals(parameters('stage'), 6)]",
            "type": "microsoft.mission/enclaveconnections",
            "apiVersion": "2024-01-01-preview",
            "name": "[format('example-enc-con{0}', parameters('connectionNameBase'))]",
            "location": "[parameters('location')]",
            "tags": {
                "department": "MyDepartment",
                "company": "MyCompany"
            },
            "properties": {
                "communityResourceId": "[resourceId('Microsoft.Mission/communities', parameters('communityName'))]",
                "sourceResourceId": "[resourceId('Microsoft.Mission/virtualenclaves', format('{0}-2', parameters('enclaveName')))]",
                "sourceCidr": "[if(greaterOrEquals(parameters('stage'), 6), reference(resourceId('Microsoft.Mission/virtualenclaves', format('{0}-2', parameters('enclaveName')))).enclaveAddressSpaces.enclaveAddressSpace, null())]",
                "destinationEndpointId": "[resourceId('Microsoft.Mission/communities/communityEndpoints', parameters('communityName'), 'example')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Mission/communities', parameters('communityName'))]",
                "[resourceId('Microsoft.Mission/communities/communityEndpoints', parameters('communityName'), 'example')]",
                "enclaveName_1"
            ]
        },
        {
            "condition": "[greaterOrEquals(parameters('stage'), 5)]",
            "type": "microsoft.mission/enclaveconnections",
            "apiVersion": "2024-01-01-preview",
            "name": "[format('msft-sites-enc-con{0}', parameters('connectionNameBase'))]",
            "location": "[parameters('location')]",
            "tags": {
                "department": "MyDepartment",
                "company": "MyCompany"
            },
            "properties": {
                "communityResourceId": "[resourceId('Microsoft.Mission/communities', parameters('communityName'))]",
                "sourceResourceId": "[resourceId('Microsoft.Mission/virtualenclaves', format('{0}-2', parameters('enclaveName')))]",
                "sourceCidr": "[if(greaterOrEquals(parameters('stage'), 5), reference(resourceId('Microsoft.Mission/virtualenclaves', format('{0}-2', parameters('enclaveName')))).enclaveAddressSpaces.enclaveAddressSpace, null())]",
                "destinationEndpointId": "[resourceId('Microsoft.Mission/communities/communityEndpoints', split(format('{0}/bing-outlook', parameters('communityName')), '/')[0], split(format('{0}/bing-outlook', parameters('communityName')), '/')[1])]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Mission/communities', parameters('communityName'))]",
                "[resourceId('Microsoft.Mission/communities/communityEndpoints', split(format('{0}/bing-outlook', parameters('communityName')), '/')[0], split(format('{0}/bing-outlook', parameters('communityName')), '/')[1])]",
                "enclaveName_1"
            ]
        },
        {
            "condition": "[greaterOrEquals(parameters('stage'), 5)]",
            "type": "microsoft.mission/enclaveconnections",
            "apiVersion": "2024-01-01-preview",
            "name": "[format('int-adds-enc-con{0}', parameters('connectionNameBase'))]",
            "location": "[parameters('location')]",
            "tags": {
                "department": "MyDepartment",
                "company": "MyCompany"
            },
            "properties": {
                "communityResourceId": "[resourceId('Microsoft.Mission/communities', parameters('communityName'))]",
                "sourceResourceId": "[resourceId('Microsoft.Mission/virtualenclaves', format('{0}-2', parameters('enclaveName')))]",
                "sourceCidr": "[if(greaterOrEquals(parameters('stage'), 5), reference(resourceId('Microsoft.Mission/virtualenclaves', format('{0}-2', parameters('enclaveName')))).enclaveAddressSpaces.enclaveAddressSpace, null())]",
                "destinationEndpointId": "[resourceId('Microsoft.Mission/virtualEnclaves/enclaveEndpoints', split(format('{0}-1/{1}-1-v2', parameters('enclaveName'), parameters('endpointName')), '/')[0], split(format('{0}-1/{1}-1-v2', parameters('enclaveName'), parameters('endpointName')), '/')[1])]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Mission/communities', parameters('communityName'))]",
                "enclaveName_1",
                "[resourceId('Microsoft.Mission/virtualEnclaves/enclaveEndpoints', split(format('{0}-1/{1}-1-v2', parameters('enclaveName'), parameters('endpointName')), '/')[0], split(format('{0}-1/{1}-1-v2', parameters('enclaveName'), parameters('endpointName')), '/')[1])]"
            ]
        },
        {
            "condition": "[greaterOrEquals(parameters('stage'), 6)]",
            "type": "microsoft.mission/enclaveconnections",
            "apiVersion": "2024-01-01-preview",
            "name": "[format('example-in-adds{0}', parameters('connectionNameBase'))]",
            "location": "[parameters('location')]",
            "tags": {
                "department": "MyDepartment",
                "company": "MyCompany"
            },
            "properties": {
                "communityResourceId": "[resourceId('Microsoft.Mission/communities', parameters('communityName'))]",
                "sourceResourceId": "[resourceId('Microsoft.Mission/communities/transitHubs', parameters('communityName'), parameters('transitHubName'))]",
                "sourceCidr": "172.16.18.0/24",
                "destinationEndpointId": "[resourceId('Microsoft.Mission/virtualEnclaves/enclaveEndpoints', split(format('{0}-1/{1}-1-v2', parameters('enclaveName'), parameters('endpointName')), '/')[0], split(format('{0}-1/{1}-1-v2', parameters('enclaveName'), parameters('endpointName')), '/')[1])]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Mission/communities', parameters('communityName'))]",
                "[resourceId('Microsoft.Mission/communities/transitHubs', parameters('communityName'), parameters('transitHubName'))]",
                "enclaveName_1",
                "[resourceId('Microsoft.Mission/virtualEnclaves/enclaveEndpoints', split(format('{0}-1/{1}-1-v2', parameters('enclaveName'), parameters('endpointName')), '/')[0], split(format('{0}-1/{1}-1-v2', parameters('enclaveName'), parameters('endpointName')), '/')[1])]"
            ]
        }
    ]
}